# Copyright Contributors to the Packit project.
# SPDX-License-Identifier: MIT

---
# https://kubernetes.io/docs/concepts/workloads/controllers/statefulset
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ name }}
  annotations:
    # Setting triggers to StatefulSet is tricky (they also don't appear in GUI).
    # I run the following and then checked how the resulting yaml looks like.
    # oc set triggers statefulset.apps/packit-worker --from-image=packit-worker:dev -c packit-worker
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"packit-worker:{{ deployment }}"},"fieldPath":"spec.template.spec.containers[?(@.name==\"packit-worker\")].image"}]
spec:
  selector:
    matchLabels:
      # has to match .spec.template.metadata.labels
      name: {{ name }}
      app: packit
  serviceName: "{{ name }}"
  replicas: {{ worker_replicas }}
  volumeClaimTemplates:
{% if with_repository_cache and 'long-running' in queues %}
    - metadata:
        name: packit-worker-repository-cache
      spec:
        # The only option on OpenShift Online is AWS EBS provisioning
        # supporting only `ReadWriteOnce` access:
        # https://docs.openshift.com/online/pro/architecture/additional_concepts/storage.html#pv-restrictions
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ repository_cache_storage }}
{% endif %}
  updateStrategy.type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        name: {{ name }}
        app: packit
      # https://docs.openshift.com/container-platform/3.11/dev_guide/managing_images.html#using-is-with-k8s
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: packit-ssh
          secret:
            secretName: packit-ssh
        - name: packit-secrets
          secret:
            secretName: packit-secrets
        - name: packit-config
          secret:
            secretName: packit-config
      containers:
        - name: packit-worker
          image: packit-worker:{{ deployment }}
          env:
            - name: PROJECT
              value: {{ project }}
            - name: DEPLOYMENT
              value: {{ deployment }}
            - name: DISTGIT_URL
              value: {{ distgit_url }}
            - name: DISTGIT_NAMESPACE
              value: {{ distgit_namespace }}
            - name: APP
              value: {{ celery_app }}
            - name: REDIS_SERVICE_HOST
              value: redis
            - name: SENTRY_SECRET
              valueFrom:
                secretKeyRef:
                  name: packit-sentry
                  key: sentry
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: postgres-secret
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: postgres-secret
            - name: POSTGRESQL_HOST
              valueFrom:
                secretKeyRef:
                  key: database-host
                  name: postgres-secret
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: postgres-secret
            - name: CELERY_RETRY_LIMIT
              value: "{{ celery_retry_limit }}"
            - name: CELERY_RETRY_BACKOFF
              value: "{{ celery_retry_backoff }}"
            - name: QUEUES
              value: "{{ queues }}"
            - name: PUSHGATEWAY_ADDRESS
              value: "{{ pushgateway_address }}"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: secret-access-key
          volumeMounts:
            - name: packit-ssh
              mountPath: /packit-ssh
            - name: packit-secrets
              mountPath: /secrets
            - name: packit-config
              mountPath: /home/packit/.config
{% if with_repository_cache and 'long-running' in queues %}
            - name: packit-worker-repository-cache
              mountPath: /repository-cache
{% endif %}
          command:
            - "/usr/bin/run_worker.sh"
          resources:
            requests:
              memory: {{ worker_requests_memory }}
              cpu: {{ worker_requests_cpu }}
            limits:
              memory: {{ worker_limits_memory }}
              cpu: {{ worker_limits_cpu }}
          # https://github.com/packit/deployment/pull/142
          #readinessProbe:
          #  exec:
          #    command:
          #      - bash
          #      - -c
          #      - "celery -A $APP status | grep $(cat /etc/hostname) | grep OK"
          #  initialDelaySeconds: 10
          #  periodSeconds: 60
          #livenessProbe:
          #  exec:
          #    command:
          #      - bash
          #      - -c
          #      # does this worker respond to ping?
          #      - 'celery -A $APP inspect ping --destination "celery@$(cat /etc/hostname)"'
          #  initialDelaySeconds: 10
          #  periodSeconds: 30
---
# https://docs.openshift.com/container-platform/3.11/dev_guide/managing_images.html#writing-image-stream-definitions
kind: ImageStream
apiVersion: v1
metadata:
  name: packit-worker
spec:
  tags:
    - name: {{ deployment }}
      from:
        kind: DockerImage
        name: {{ image_worker }}
      importPolicy:
        # Periodically query registry to synchronize tag and image metadata.
        scheduled: {{ auto_import_images }}
  lookupPolicy:
    # allows all resources pointing to this image stream to use it in the image field
    local: true
